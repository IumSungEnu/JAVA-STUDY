쿠키와 세션

쿠키(Cookie)
- 개인화된 서비스(브라우저별 서비스)를 제공하기 위한 기술
- 브라우저별 데이터 저장 기술
- 저장데이터를 서버가 서비스를 제공하기 위해서 사용(개별화된 서비스)

*데이터는 부라우저 안에 있다.

- 쿠키 데이터는 브라우저에 저장되지만 실제 사용하는 쪽은 서버가 사용합니다.
- 요청시 서버로 전송(요청 헤더)
  : 요청헤더 - cookies
  

1. 쿠키의 동작과정
1) 생성 
  서버의 응답 헤더 - set-Cookie : 키=값; ....

2) 저장
  브라우저가 쿠키형태로 저장(키=값)

3) 전송
  요청 -> 브라우저 -> 요청 헤더(cookies)를 통해 서버 전송


쿠키 생성 메서드
HttpServletResponse
  addCookie(Cookie cookie) : 응답 헤더에 Set-Cookie ...

쿠키를 조회하는 메서드
HttpServletRequest
  Cookie[] getCookies();



2. 쿠키 클래스의 메서드 종류

3. 쿠키와 세션의 차이

4. 쿠키 생성
  
5. 쿠키 삭제
삭제시간을 변경해서 삭제할 수 있다.
Cookie
  setMaxAge(0) -> 1970년도 ....


쿠키 만료시간
  UTC + 9





세션
1. 세션이란?
개인화된 서비스 저장 정보
-> 서버 저장
-> 요청시마다 전송이 안된다.

JSESSIONID 쿠키 - 브라우저별로 구분된느 값
-> 요청시 브라우저 -> 서버 -> 세션 저장소에서 개인별 데이터를 조회
:브라우저별로 쿠키의 키값이 다 다르다.

HttpSession
  void setAttribute(String name, Object value)
  Object getAtribute(String name)
  void removeAttribute(String name)

-> EL식 변수로 사용이 가능하다.


2. session 내장 객체 메서드 종류
3. 세션 생성
4. 세션 정보
5. 세션 삭제
  - invalidate() : 세션 비우기(예 - 로그아웃)


6. 세션 유효 시간 설정
  - setMaclnactiveInterval
    -> 기본값이 20분
    -> 설정을 통해서 변경


세션 객체를 조회
-> HttpServletRequest request
        HttpSession get Session()

-> PageContext pageContext
        HttpSession getSession()

-> jsp 페이지는 내장 객체로 session








---------------------------------------------------------------------------

총정리

Cookie
  응답헤더(Set-Cookie: ....)
  브라우저가 저장
  요청시 헤더(cookie)
  서버가 조회


  - 보안에 취약

 쿠키 등록 메서드
  HttpServerResponse
    addCookie(Cookie cookie)

 쿠키 조회 메서드
  HttpServletRequest
    Cookie[] getCookies();

  Cookie = new Cookie("이름","값");

  setDomain
  getDomain
  setPath
  getPath

  setMaxAge(초) : 초 단위만큼 쿠키가 살아있다.
         60 * 60 * 24 * 7
         초   분   시간  일

  setMaxAge(0) : 쿠키 삭제(만료)






Session
  - 개인화된 데이터 서버에 저장
  - 브라우저별 구분 SESSION ID 가 쿠키로 저장
  - 서버에서 조회

HttpSession
  - void setAttribute(String name, Object value)
  - Object getAttribute(String name)
  - void removeAttribute(String name)

EL식 변수로 바로 접근이 가능하다
${....}
${sessionScope} : 특정 범위에 세션을 조회(범위축소)

HttpServletRequest
  HttpSession getSession()

// JSP 페이지 - session 내장 객체

PageContext
  HttpSession getSession()


세션 비우기
  invalidate()






















