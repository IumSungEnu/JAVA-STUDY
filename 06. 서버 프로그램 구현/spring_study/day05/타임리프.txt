타임리프(Thymeleaf) - 가장 많이 사용한다.
1. 스프링  MVC와 타임리프 연동 설정
thymeleaf spring5
thymeleaf java8time
	- 내부에 #temporals식 객체가 추가되어 있다.


2. 타임리프 소개
- 자연스러운 템플릿 지향 언어(Natural Template)

기존의 틀을 벗어나지 않고 틀을 유지하면서 작업이 가능하다.


타임리프 기본문법
1. 타임리프의 주요 식(expression)
1) 변수식           : ${속성명}, ${연산식}
    속성을 추가가 어려운 경우 : [[식]]
    예) [[${속성명}]]
         [[*{속성명}]]

2) 메세지 식       : #{메세지 코드}



3) URL식(링크식)  : @{URL ...} : 컨택스트 경로가 자동 추가 + 추가 기능
	             예)/study : 컨택스트 경로
	               @(/member/join} -> /study/member/join

  쿼리스트링 추가 기능 (키=값, 키=값)
  (querystring)

4) 선택 변수식     : *{...}, th:object와 함께 쓰인다.
	
th:block : 출력되는 태그 없이 변수값을 저장, 제어구문 ...


2. 타임리프 식 객체
3. th:text : 텍스트만 출력(문자열)
   th:utext : HTML 태그 해석 출력(html인식하여 문자열이 아닌 스타일로 적용된다)
4. 
   th:if th:unless 조건문

   th:each : 반복문
	- 배열
	- 컬렉션(Collection - List, Set)
	- Iterator

	- status
	   .index : 0부터 시작하는 순서번호
	   .count : 1부터 시작하는 순서번호
	   .even : 짝수여부
	   .odd : 홀수여부
	   .first : 첫번째 반복
 	   .last : 마지막 반복


<c:forEach var="item" items="${items}" varStratus="status">
</c:forEach>

5. th:href, th:src ...
    th:classappend


6. th:object

타임리프 내장 식 객체
${#객체명 ...}
${*객체명 ...}
-jsp와 동일한 내장객체를 가지고 있다.

#temporals : java.time 패키지

- 스프링 빈으로 되어 있으면 바로 템플릿 내에서 접근 가능
${@빈이름.메서드명(...)}
*{...}


타임리프  페이지 레이아웃

thymeleaf layout 


스프링 MVC폼과 에러 메시지 연동

th:field -> 커멘드 객체의 값
	-> 태그에 맞게 value, checked, selected ...


th:replace
th:fragment



WebMvcConfigurer 인터페이스 -설정의 틀을 제공
  - addViewControllers
  - addResourceHandlers
    - 정적 자원 경로


배열, 컬렉션 속성 -> 














